
[include mainsail.cfg]
[include bedfans.cfg]

[delayed_gcode FORCE_ABSOLUTE_AT_START]
initial_duration: 1
gcode:
  G90
  G21
  SET_GCODE_OFFSET X=0 Y=0 Z=0

[force_move]
enable_force_move: True
[include homing.cfg]

[mcu scanner]
#canbus_uuid: 0ca8d67388c2 
serial: /dev/serial/by-id/usb-Cartographer_614e_230017000443565633393720-if00
#    adjust to suit your scanner, if using usb change to serial

[scanner]
mcu: scanner            
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: 15                         
#    adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.03
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc      
mesh_runs: 2
#    Number of passes to make during mesh scan.

[bed_mesh]
zero_reference_position: 175,175
mesh_min: 35,35
mesh_max: 315,315
probe_count: 9,9
mesh_pps: 3,3
algorithm: bicubic

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_14001E000B50304E35313720-if00
restart_method: command

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400     # change to 200 if your motor is 1.8Â°
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 80
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
diag_pin: ^PG6
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 165

[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 80  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG9
driver_SGTHRS: 175
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop # uses cartographer as virtual endstop
position_min: -5
position_max: 310
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 0

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Bed Heater
#####################################################################


##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA1
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 120
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

#####################################################################
#   Fan Control
#####################################################################

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PD12
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.5

#####################################################################
#   LED Control
#####################################################################

[output_pin caselight]
## Chamber Lighting - CNC_FAN5
pin: PD15
pwm:true
shutdown_value: 0
value:0
cycle_time: 0.01

#####################################################################
#   Additional Sensors
#####################################################################

#[temperature_sensor chamber_temp]
## Chamber Temperature - T1
#sensor_type: ATC Semitec 104NT-4-R025H42G
#sensor_pin: PF5
#min_temp: 0
#max_temp: 100
#gcode_id: chamber_th

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

#[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position:-10,-10
#speed:100
#z_hop:10
#z_hop_speed:10


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
#gantry_corners:
#   -60,-10
#   360,370
##  Probe points
#points:
#   50,25
#   50,225
#   250,225
#   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

#[display]
##  mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

###  Set RGB values on boot up for each Neopixel. 
###  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

[mcu nhk]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_rp2040_3136313132017172-if00
restart_method: command
##--------------------------------------------------------------------

#####################################################################
#   Endstops
#####################################################################
## XES - Toolhead PCB

#####################################################################
#   Filament Sensor
#####################################################################
[filament_switch_sensor filament_sensor]
switch_pin: ^!nhk:gpio3
pause_on_runout: True
event_delay: 0.5

# Spool-runout switch on the Nitehawk X endstop (repurposed)
[filament_switch_sensor spool_filament]
switch_pin: ^!nhk:gpio13         # X endstop signal; pull-up enabled
pause_on_runout: False          # usually just notify for the spool sensor
event_delay: 0.5
runout_gcode: M118 Spool runout detected on toolhead switch
insert_gcode: M118 Spool reinserted

#####################################################################
# 	Extruder
#####################################################################
# --- Nitehawk-36 Extruder (Rapido 2 Plus UHF = PT1000) ---
[extruder]
step_pin: nhk:gpio23
dir_pin: !nhk:gpio24                 # flip '!' if it runs backwards
enable_pin: !nhk:gpio25

# motion & extrusion settings (yours)
rotation_distance: 22.6789511
gear_ratio: 50:10
microsteps: 32
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.75

# heater & sensor on Nitehawk
heater_pin: nhk:gpio9
sensor_pin: nhk:gpio29
sensor_type: PT1000
pullup_resistor: 2200

# safety & PID (yours)
min_extrude_temp: 170
min_temp: 10
max_temp: 270
max_power: 1.0
control: pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721

# --- TMC2209 driver on Nitehawk-36 ---
[tmc2209 extruder]
uart_pin: nhk:gpio0
tx_pin: nhk:gpio1
sense_resistor: 0.100
run_current: 0.5                    # start here; stay â¤ 0.7A
interpolate: false
stealthchop_threshold: 0

#####################################################################
#   Fans
#####################################################################
## PCF
[fan]
pin: nhk:gpio6


## HEF
[heater_fan hotend_fan]
pin: nhk:gpio5
tachometer_pin: nhk:gpio16
tachometer_ppr: 2

#####################################################################
#   Lights
#####################################################################
##Stealthburner Headlights
[neopixel sb_leds]
pin: nhk:gpio7
chain_count: 3
color_order: GRBW
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 1.0
initial_WHITE: 0.0

## PCB Activity Light
[output_pin act_led]
pin: !nhk:gpio8

#####################################################################
#   Accelerometer
#####################################################################
[adxl345]
cs_pin: nhk:gpio27
spi_software_sclk_pin: nhk:gpio18
spi_software_mosi_pin: nhk:gpio20
spi_software_miso_pin: nhk:gpio19

[resonance_tester]
accel_chip: adxl345
accel_per_hz: 100
sweeping_accel: 400
sweeping_period: 0
##--------------------------------------------------------------------
## Uncomment below for 250mm build
#probe_points:
#    125, 125, 20

## Uncomment below for 300mm build
#probe_points:
#    155, 155, 20

## Uncomment below for 350mm build
probe_points:
    175, 175, 20

#####################################################################
#   Addtional Sensors
#####################################################################
[temperature_sensor NH36]
sensor_type: temperature_mcu
sensor_mcu: nhk
min_temp: 0
max_temp: 100

#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32

   
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  SET_GCODE_OFFSET Z=0                                 # Set offset to 0

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  STATUS_HOMING                                         # Set LEDs to homing-mode
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2 for bed mesh)
  #BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    M106 S255                                           # Turn on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turn on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Display info on display
    WAIT_COIL_CHAMBER TARGET={target_chamber} OFFSET=2   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5 min"               # Display info on display
    G4 P300000                                          # Wait 5 min for the bedtemp to stabilize
  {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Display info on display
  M109 S150                                             # Heat hotend to 150c

  ##  Uncomment for V2.4 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  STATUS_LEVELING                                      # Set LEDs to leveling-mode
  QUAD_GANTRY_LEVEL                                    # Level the printer via QGL
  G28 Z                                                # Home Z again after QGL

  ##  Uncomment for bed mesh (2 of 2 for bed mesh)
  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  STATUS_MESHING                                       # Set LEDs to bed mesh-mode
  BED_MESH_CALIBRATE                                   # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh

  CARTOGRAPHER_TOUCH                                    # Calibrate z offset only with hot nozzle

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
  STATUS_HEATING                                        # Set LEDs to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
  STATUS_PRINTING                                       # Set LEDs to printing-mode
  G0 X{x_wait - 50} Y4 F10000                           # Go to starting point
  G0 Z0.4                                               # Raise Z to 0.4
  G91                                                   # Incremental positioning 
  G1 X100 E20 F1000                                     # Primeline
  G90                                                   # Absolute position
   

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

#     Allows bedfans to use Cartographer coil temp as chamber temp proxy
[gcode_macro COIL_WAIT_STATE]
variable_target: 0
variable_offset: 0
gcode:

[gcode_macro WAIT_COIL_CHAMBER]
description: Wait until Cartographer coil temp reaches TARGET (+ optional OFFSET)
gcode:
  {% set target = params.TARGET|int %}
  {% set offset = params.OFFSET|default(2)|int %}
  SET_GCODE_VARIABLE MACRO=COIL_WAIT_STATE VARIABLE=target VALUE={target}
  SET_GCODE_VARIABLE MACRO=COIL_WAIT_STATE VARIABLE=offset VALUE={offset}
  UPDATE_DELAYED_GCODE ID=coil_wait_loop DURATION=0.5

[delayed_gcode coil_wait_loop]
gcode:
  {% set tgt = printer["gcode_macro COIL_WAIT_STATE"].target|int + printer["gcode_macro COIL_WAIT_STATE"].offset|int %}
  {% set cur = printer.scanner.coil_temp|default(0)|float %}
  {% if cur < tgt %}
    SET_DISPLAY_TEXT MSG={"Chamber %.1f/%.1fC" % (cur, tgt)}
    UPDATE_DELAYED_GCODE ID=coil_wait_loop DURATION=2
  {% else %}
    SET_DISPLAY_TEXT MSG={"Chamber ready: %.1fC" % (cur)}
  {% endif %}



#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [scanner]
#*# mode = touch
#*# scanner_touch_threshold = 1250
#*# scanner_touch_speed = 3
#*#
#*# [scanner model default]
#*# model_coef = 1.4980710352968412,
#*# 	  1.8265428413244529,
#*# 	  0.7492912098417762,
#*# 	  0.24174354256114333,
#*# 	  0.3885223709073994,
#*# 	  0.7814786638762085,
#*# 	  -0.29977633052110053,
#*# 	  -0.8922323905005999,
#*# 	  0.3142388336495876,
#*# 	  0.494585337106997
#*# model_domain = 3.203159272778922e-07,3.3428746003086827e-07
#*# model_range = 0.200000,5.100000
#*# model_temp = 26.335789
#*# model_offset = 0.00000
#*# model_mode = touch
#*# model_fw_version = CARTOGRAPHER 5.0.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.225794, -0.185717, -0.152588, -0.132995, -0.117668, -0.103687, -0.097981, -0.102533, -0.099961, -0.111729, -0.123872, -0.141122, -0.161106, -0.178583, -0.197134
#*# 	-0.100833, -0.178826, -0.147870, -0.131239, -0.117868, -0.103937, -0.022625, -0.022625, -0.022625, -0.090530, -0.105938, -0.124817, -0.145312, -0.155835, -0.106156
#*# 	-0.048968, -0.119559, -0.090679, -0.072272, -0.056878, -0.049166, -0.022625, -0.022625, -0.022625, -0.040632, -0.054789, -0.075645, -0.090893, -0.107667, -0.049463
#*# 	-0.029235, -0.087376, -0.065503, -0.047135, -0.034154, -0.027956, -0.022625, -0.022625, -0.022625, -0.022475, -0.039132, -0.058174, -0.075784, -0.092212, -0.032502
#*# 	-0.055766, -0.121760, -0.094415, -0.078919, -0.066209, -0.057444, -0.022625, -0.022625, -0.022625, -0.050696, -0.069166, -0.086008, -0.107888, -0.122402, -0.064193
#*# 	-0.047505, -0.133377, -0.097491, -0.082612, -0.055478, -0.050702, -0.022625, -0.022625, -0.022625, -0.032521, -0.059759, -0.080693, -0.104228, -0.116221, -0.051598
#*# 	-0.022741, -0.094944, -0.063140, -0.043915, -0.034163, -0.023740, -0.022625, -0.022625, -0.022625, -0.004150, -0.030561, -0.052193, -0.073960, -0.087398, -0.025949
#*# 	-0.022946, -0.079359, -0.051072, -0.028522, -0.021273, -0.012980, -0.022625, -0.022625, -0.022625, 0.000116, -0.014509, -0.034180, -0.055708, -0.077698, -0.009911
#*# 	-0.011514, -0.079046, -0.052285, -0.037406, -0.022532, -0.011725, -0.022625, -0.022625, -0.022625, -0.005645, -0.018147, -0.038242, -0.060968, -0.070593, -0.016563
#*# 	-0.013248, -0.072610, -0.049189, -0.027243, -0.012849, 0.000361, -0.022625, -0.022625, -0.022625, -0.006148, -0.018593, -0.034904, -0.047561, -0.060523, -0.009684
#*# 	-0.051463, -0.127358, -0.099201, -0.067688, -0.057353, -0.054001, -0.022625, -0.022625, -0.022625, -0.052280, -0.063983, -0.077541, -0.088696, -0.102699, -0.062267
#*# 	-0.072556, -0.129776, -0.100915, -0.072055, -0.067131, -0.069791, -0.022625, -0.022625, -0.022625, -0.076069, -0.085722, -0.102510, -0.116125, -0.123017, -0.078802
#*# 	-0.109895, -0.164535, -0.141698, -0.124921, -0.115695, -0.108246, -0.022625, -0.022625, -0.022625, -0.110262, -0.117395, -0.135044, -0.148948, -0.159404, -0.113020
#*# 	-0.140257, -0.188206, -0.164611, -0.150421, -0.142005, -0.131728, -0.022625, -0.022625, -0.022625, -0.143718, -0.151952, -0.170078, -0.186523, -0.199411, -0.145547
#*# 	-0.161132, -0.150686, -0.131685, -0.116283, -0.112800, -0.116069, -0.105905, -0.115814, -0.126483, -0.135056, -0.145291, -0.161030, -0.179059, -0.196280, -0.138419
#*# x_count = 15
#*# y_count = 15
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 35.0
#*# max_x = 315.0
#*# min_y = 35.0
#*# max_y = 315.0
